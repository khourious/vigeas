#!/bin/bash

sudo apt-get install -y autoconf automake build-essential ca-certificates cargo clang cmake curl dos2unix git libclang-dev libhdf5-dev libssl-dev libzstd-dev zlib1g-dev xz-utils

chmod 700 -R $HOME/vigeas/scripts

if [[ -z $(grep vigeas ~/.[bz]shrc) ]]; then
    echo 'export PATH=$HOME/vigeas/scripts:$PATH' >> ~/.[bz]shrc
fi

if [[ -z $(which $HOME/.local/bin/micromamba) ]]; then
    yes | "${SHELL}" <(curl -L micro.mamba.pm/install.sh)
    echo 'alias conda=micromamba' >> ~/.[bz]shrc
    echo 'alias mamba=micromamba' >> ~/.[bz]shrc
    echo 'export PATH=$HOME/.local/bin:$PATH' >> ~/.[bz]shrc
    export PATH=$HOME/.local/bin:$PATH
    micromamba create -y -n vigeas-dnap -c conda-forge -c bioconda blast bwa fastp ivar mafft samtools seqkit
    micromamba create -y -n vigeas-ont -c defaults -c conda-forge -c bioconda artic-porechop=0.3.2pre artic-tools=0.2.6 bcftools=1.17 biopython=1.81 bwa=0.7.17 clint=0.5.1 htslib=1.17 keras-preprocessing=1.1.2 longshot=0.4.5 mafft medaka=1.8.0 minimap2=2.26 multiqc=1.15 muscle=3.8 nanopolish=0.14.0 pandas=2.0.3 pip pyfaidx=0.6.0 pytest python=3.9.15 pysam=0.21.0 pyvcf=0.6.8 requests=2.31.0 samtools=1.17 seqkit tqdm=4.66.1
    micromamba create -y -n vigeas-rnapenr -c conda-forge -c bioconda blast bwa entrez-direct exonerate fastp ivar mafft samtools seqkit seqtk spades
    micromamba create -y -n vigeas-sars2 -c conda-forge -c bioconda nextclade pangolin
    micromamba create -y -n vigeas-stats -c conda-forge -c bioconda exonerate ghostscript r-base r-cowplot r-dplyr r-ggplot2 r-patchwork r-plyr r-readr r-svglite samtools seqkit seqtk
    cd; git clone https://github.com/artic-network/fieldbioinformatics; cd fieldbioinformatics
    python setup.py install
else
    if [[ -z $(micromamba env list | grep vigeas-dnap) ]]; then
        micromamba create -y -n vigeas-dnap -c conda-forge -c bioconda blast bwa fastp ivar mafft samtools seqkit
    fi
    if [[ -z $(micromamba env list | grep vigeas-ont) ]]; then
        micromamba create -y -n vigeas-ont -c defaults -c conda-forge -c bioconda artic-porechop=0.3.2pre artic-tools=0.2.6 bcftools=1.17 biopython=1.81 bwa=0.7.17 clint=0.5.1 htslib=1.17 keras-preprocessing=1.1.2 longshot=0.4.5 mafft medaka=1.8.0 minimap2=2.26 multiqc=1.15 muscle=3.8 nanopolish=0.14.0 pandas=2.0.3 pip pyfaidx=0.6.0 pytest python=3.9.15 pysam=0.21.0 pyvcf=0.6.8 requests=2.31.0 samtools=1.17 seqkit tqdm=4.66.1
        cd; git clone https://github.com/artic-network/fieldbioinformatics; cd fieldbioinformatics
        python setup.py install
    fi
    if [[ -z $(micromamba env list | grep vigeas-rnapenr) ]]; then
        micromamba create -y -n vigeas-rnapenr -c conda-forge -c bioconda blast bwa entrez-direct exonerate fastp ivar mafft samtools seqkit seqtk spades
    fi
    if [[ -z $(micromamba env list | grep vigeas-sars2) ]]; then
        micromamba create -y -n vigeas-sars2 -c conda-forge -c bioconda nextclade pangolin
    fi
    if [[ -z $(micromamba env list | grep vigeas-stats) ]]; then
        micromamba create -y -n vigeas-stats -c conda-forge -c bioconda exonerate ghostscript r-base r-cowplot r-dplyr r-ggplot2 r-patchwork r-plyr r-readr r-svglite samtools seqkit seqtk
    fi
    echo "micromamba:" && micromamba --version && echo "" && echo "environments:" && micromamba env list | grep vigeas
fi

GUPPY_VERSION=6.5.7 # Archived Software
if [[ ! -z $(which guppy_basecaller) ]]; then
    cd
    wget https://cdn.oxfordnanoportal.com/software/analysis/ont-guppy_"$GUPPY_VERSION"_linux64.tar.gz -O ont-guppy.tar.gz
    tar -vzxf ont-guppy.tar.gz
    rm -rf ont-guppy.tar.gz
    echo 'export PATH=$HOME/ont-guppy/bin:/usr/local/share/rsi/idl/bin:$PATH' >> ~/.[bz]shrc
elif [[ $(guppy_barcoder --version | awk -F" " '{print $NF}' | awk -F+ '{print $1}' | sed -n '1p') != "$GUPPY_VERSION" ]]; then
    cd
    rm -rf ont-guppy
    wget https://cdn.oxfordnanoportal.com/software/analysis/ont-guppy_"$GUPPY_VERSION"_linux64.tar.gz -O ont-guppy.tar.gz
    tar -vzxf ont-guppy.tar.gz
    rm -rf ont-guppy.tar.gz
    echo 'export PATH=$HOME/ont-guppy/bin:/usr/local/share/rsi/idl/bin:$PATH' >> ~/.[bz]shrc
else
    guppy_basecaller --version
fi

DORADO_VERSION=0.5.0 # Updated 06 Dec 2023
if [[ ! -z $(which dorado) ]]; then
    cd
    wget https://cdn.oxfordnanoportal.com/software/analysis/dorado-"$DORADO_VERSION"-linux-x64.tar.gz -O dorado.tar.gz
    tar -vzxf dorado.tar.gz
    rm -rf dorado.tar.gz
    mv dorado-"$DORADO_VERSION"-linux-x64 ont-dorado
    echo 'export PATH=$HOME/ont-dorado/bin:$PATH' >> ~/.[bz]shrc
    export PATH=$HOME/ont-dorado/bin:$PATH
    dorado download --directory dorado-linux-x64/models
    pip install pod5
    echo 'export PATH=$HOME/.local/bin:$PATH' >> ~/.[bz]shrc
elif [[ $(dorado --version 2>&1 | awk -F+ '{print $1}') != "$DORADO_VERSION" ]]; then
    cd
    rm -rf ont-dorado
    wget https://cdn.oxfordnanoportal.com/software/analysis/dorado-"$DORADO_VERSION"-linux-x64.tar.gz -O dorado.tar.gz
    tar -vzxf dorado.tar.gz
    rm -rf dorado.tar.gz
    mv dorado-"$DORADO_VERSION"-linux-x64 ont-dorado
    echo 'export PATH=$HOME/ont-dorado/bin:$PATH' >> ~/.[bz]shrc
    export PATH=$HOME/ont-dorado/bin:$PATH
    dorado download --directory dorado-linux-x64/models
    pip install pod5
    echo 'export PATH=$HOME/.local/bin:$PATH' >> ~/.[bz]shrc
else
    dorado --version
fi

# DATABASE=$HOME/vigeas/blastdb/*.fasta
# makeblastdb -in "$DATABASE" -dbtype nucl -out $HOME/vigeas/blastdb/"$(basename "$DATABASE" | awk -F. '{print $1}')"
# awk '/^>/{if(s) close(s); s="'"$HOME"'/vigeas/refseq/" substr($0,2) ".fasta"; print > s; next}{if(s) print >> s}' "$DATABASE"
