#!/bin/bash

sudo apt-get install -y \
autoconf \
automake \
build-essential \
ca-certificates \
cargo \
clang \
cmake \
curl \
dos2unix \
git \
libclang-dev \
libhdf5-dev \
libssl-dev \
libzstd-dev \
pipx \
zlib1g-dev \
xz-utils

chmod 700 -R $HOME/vigeas/scripts

if [[ -z $(grep vigeas ~/.[bz]shrc) ]]; then
    echo 'export PATH=$HOME/vigeas/scripts:$PATH' >> ~/.[bz]shrc
fi

if [[ -z $(command -v micromamba) ]]; then
    export BIN_FOLDER="$HOME/micromamba/bin"
    export INIT_YES="Y"
    export CONDA_FORGE_YES="Y"
    export PREFIX_LOCATION="$HOME/micromamba"
    "${SHELL}" <(curl -L micro.mamba.pm/install.sh) <<EOF
"$BIN_FOLDER"
"$INIT_YES"
"$CONDA_FORGE_YES"
"$PREFIX_LOCATION"
EOF
    echo 'alias mm="micromamba"' >> ~/.[bz]shrc
    export PATH=$HOME/micromamba/bin:$PATH
    micromamba create -y -n vigeas-ill -c conda-forge -c bioconda bbmap blast bwa-mem2 entrez-direct exonerate fastp ivar mafft samtools seqkit seqtk spades
    micromamba create -y -n vigeas-ont -c conda-forge -c bioconda artic-porechop artic-tools bcftools biopython bwa clint htslib keras-preprocessing longshot mafft medaka minimap2 multiqc muscle nanopolish ncurses pandas pip pyfaidx pytest python pysam pyvcf requests samtools seqkit tqdm
    micromamba create -y -n vigeas-sars2 -c conda-forge -c bioconda nextclade pangolin
    micromamba create -y -n vigeas-stats -c conda-forge -c bioconda exonerate ghostscript r-base r-cowplot r-dplyr r-ggplot2 r-patchwork r-plyr r-readr r-svglite samtools seqkit seqtk
#    cd; git clone https://github.com/artic-network/fieldbioinformatics; cd fieldbioinformatics
#    python3 setup.py install
else
    if [[ -z $(micromamba env list | grep vigeas-ill) ]]; then
        micromamba create -y -n vigeas-ill -c conda-forge -c bioconda bbmap blast bwa-mem2 entrez-direct exonerate fastp ivar mafft samtools seqkit seqtk spades
    fi
    if [[ -z $(micromamba env list | grep vigeas-ont) ]]; then
        micromamba create -y -n vigeas-ont -c conda-forge -c bioconda artic-porechop artic-tools bcftools biopython bwa clint htslib keras-preprocessing longshot mafft medaka minimap2 multiqc muscle nanopolish ncurses pandas pip pyfaidx pytest python pysam pyvcf requests samtools seqkit tqdm
#        cd; git clone https://github.com/artic-network/fieldbioinformatics; cd fieldbioinformatics
#        python3 setup.py install
    fi
    if [[ -z $(micromamba env list | grep vigeas-sars2) ]]; then
        micromamba create -y -n vigeas-sars2 -c conda-forge -c bioconda nextclade pangolin
    fi
    if [[ -z $(micromamba env list | grep vigeas-stats) ]]; then
        micromamba create -y -n vigeas-stats -c conda-forge -c bioconda exonerate ghostscript r-base r-cowplot r-dplyr r-ggplot2 r-patchwork r-plyr r-readr r-svglite samtools seqkit seqtk
    fi
    echo "micromamba:" && micromamba --version && echo "" && echo "environments:" && micromamba env list | grep vigeas
fi

GUPPY_VERSION=6.5.7 # Archived Software
if [[ -z $(command -v guppy_basecaller) ]]; then
    cd
    wget https://cdn.oxfordnanoportal.com/software/analysis/ont-guppy_"$GUPPY_VERSION"_linux64.tar.gz -O ont-guppy.tar.gz
    tar -vzxf ont-guppy.tar.gz
    rm -rf ont-guppy.tar.gz
    echo 'export PATH=$HOME/ont-guppy/bin:$PATH' >> ~/.[bz]shrc
elif [[ $(guppy_barcoder --version | awk -F" " '{print $NF}' | awk -F+ '{print $1}' | sed -n '1p') != "$GUPPY_VERSION" ]]; then
    cd
    rm -rf ont-guppy
    wget https://cdn.oxfordnanoportal.com/software/analysis/ont-guppy_"$GUPPY_VERSION"_linux64.tar.gz -O ont-guppy.tar.gz
    tar -vzxf ont-guppy.tar.gz
    rm -rf ont-guppy.tar.gz
else
    guppy_basecaller --version
fi

DORADO_VERSION=0.8.3 # Updated 20 Apr 2024
if [[ -z $(command -v dorado) ]]; then
    cd
    wget https://cdn.oxfordnanoportal.com/software/analysis/dorado-"$DORADO_VERSION"-linux-x64.tar.gz -O dorado.tar.gz
    tar -vzxf dorado.tar.gz
    rm -rf dorado.tar.gz
    mv dorado-"$DORADO_VERSION"-linux-x64 ont-dorado
    echo 'export PATH=$HOME/ont-dorado/bin:$PATH' >> ~/.[bz]shrc
    export PATH=$HOME/ont-dorado/bin:$PATH
    dorado download --directory ont-dorado/models
    pipx install pod5
    echo 'export PATH=$HOME/.local/bin:$PATH' >> ~/.[bz]shrc
elif [[ $(dorado --version 2>&1 | awk -F+ '{print $1}') != "$DORADO_VERSION" ]]; then
    cd
    rm -rf ont-dorado
    wget https://cdn.oxfordnanoportal.com/software/analysis/dorado-"$DORADO_VERSION"-linux-x64.tar.gz -O dorado.tar.gz
    tar -vzxf dorado.tar.gz
    rm -rf dorado.tar.gz
    mv dorado-"$DORADO_VERSION"-linux-x64 ont-dorado
    export PATH=$HOME/ont-dorado/bin:$PATH
    dorado download --directory ont-dorado/models
    pipx install pod5
else
    dorado --version
fi
