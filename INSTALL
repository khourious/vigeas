#!/bin/bash

chmod 700 -R $HOME/vigeas/scripts

sudo apt-get install dos2unix

if [[ -z $(which vigeas) ]]; then
    echo 'export PATH=$HOME/vigeas/script:/usr/local/share/rsi/idl/bin:$PATH' >> $HOME/.$(basename $SHELL)rc
fi

if [[ -z $(which conda) ]]; then
    cd
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    bash Miniconda3-latest-Linux-x86_64.sh -bfp miniconda3
    rm Miniconda3-latest-Linux-x86_64.sh
    echo 'export PATH=$HOME/miniconda3/bin:/usr/local/share/rsi/idl/bin:$PATH' >> $HOME/.$(basename $SHELL)rc
    source $HOME/.$(basename $SHELL)rc
    conda install -y -c conda-forge mamba
    mamba update -y -n base -c conda-forge -c anaconda -c bioconda -c defaults conda
    mamba create -y -n vigeas_assembly_ilumina -c conda-forge -c anaconda -c bioconda -c defaults argparse bam-readcount biopython bwa fastp ivar mafft numpy pandas samtools==1.10
    mamba create -y -n vigeas_sars2 -c conda-forge -c anaconda -c bioconda -c defaults nextclade pangolin
    mamba create -y -n vigeas_summary -c conda-forge -c anaconda -c bioconda -c defaults exonerate ghostscript mafft numpy pandas pysam samtools==1.10 seaborn seqkit seqtk
elif [[ -z $(which mamba) ]]; then
    conda install -y -c conda-forge mamba
    mamba update -y -n base -c conda-forge -c anaconda -c bioconda -c defaults conda
    if [[ -z $(conda env list | grep vigeas_assembly_illumina) ]]; then
        mamba create -y -n vigeas_assembly_ilumina -c conda-forge -c anaconda -c bioconda -c defaults argparse bam-readcount biopython bwa fastp ivar mafft numpy pandas samtools==1.10
    fi
    if [[ -z $(conda env list | grep vigeas_sars2) ]]; then
        mamba create -y -n vigeas_sars2 -c conda-forge -c anaconda -c bioconda -c defaults nextclade pangolin
    fi
    if [[ -z $(conda env list | grep vigeas_summary) ]]; then
        mamba create -y -n vigeas_summary -c conda-forge -c anaconda -c bioconda -c defaults exonerate ghostscript mafft numpy pandas pysam samtools==1.10 seaborn seqkit seqtk
    fi
elif [[ ! -z $(which mamba) ]]; then
    if [[ -z $(conda env list | grep vigeas_assembly_illumina) ]]; then
        mamba create -y -n vigeas_assembly_ilumina -c conda-forge -c anaconda -c bioconda -c defaults argparse bam-readcount biopython bwa fastp ivar mafft numpy pandas samtools==1.10
    fi
    if [[ -z $(conda env list | grep vigeas_sars2) ]]; then
        mamba create -y -n vigeas_sars2 -c conda-forge -c anaconda -c bioconda -c defaults nextclade pangolin
    fi
    if [[ -z $(conda env list | grep vigeas_summary) ]]; then
        mamba create -y -n vigeas_summary -c conda-forge -c anaconda -c bioconda -c defaults exonerate ghostscript mafft nextclade_js numpy pandas pangolin pysam samtools==1.10 seaborn seqkit seqtk
    fi
    conda --version && mamba --version | sed '2d' && echo "" && echo "conda environments:" && conda env list | egrep 'vigeas'
fi

if [[ -z $(which fastcov.py) ]]; then
    cd
    git clone https://github.com/RaverJay/fastcov
    cd fastcov
    echo 'export PATH=$HOME/fastcov:/usr/local/share/rsi/idl/bin:$PATH' >> $HOME/.$(basename $SHELL)rc
    source $HOME/.$(basename $SHELL)rc
    echo "" && echo "RaverJay/fastcov v.0.1.3"
else
    echo "" && echo "RaverJay/fastcov v.0.1.3"
fi
