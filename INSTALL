#!/bin/bash

sudo apt-get install -y autoconf automake build-essential ca-certificates cargo clang cmake curl dos2unix git libclang-dev libhdf5-dev libssl-dev libzstd-dev zlib1g-dev xz-utils

chmod 700 -R $HOME/vigeas/scripts

if [[ -z $(grep vigeas ~/.[bz]shrc) ]]; then
    echo 'export PATH=$HOME/vigeas/scripts:$PATH' >> ~/.[bz]shrc
fi

if [[ -z $(which micromamba | grep not) ]]; then
    yes | "${SHELL}" <(curl -L micro.mamba.pm/install.sh)
    source ~/.[bz]shrc
    echo 'alias conda=micromamba' >> ~/.[bz]shrc
    echo 'alias mamba=micromamba' >> ~/.[bz]shrc
    micromamba create -y -n vigeas_illumina -c conda-forge -c bioconda bwa fastp ivar mafft samtools seqkit
    micromamba create -y -n vigeas_nanopore -c conda-forge -c bioconda artic exonerate medaka mafft seqkit seqtk
    micromamba create -y -n vigeas_pycoqc -c conda-forge -c bioconda python=3.6 pycoqc
    micromamba create -y -n vigeas_sars2 -c conda-forge -c bioconda nextclade pangolin
    micromamba create -y -n vigeas_summary -c conda-forge -c bioconda exonerate ghostscript r-base r-cowplot r-dplyr r-ggplot2 r-patchwork r-plyr r-readr r-svglite samtools seqkit seqtk
    echo 'export PATH=$HOME/.local/bin:$PATH' >> ~/.[bz]shrc
else
    if [[ -z $(micromamba env list | grep vigeas_illumina) ]]; then
        micromamba create -y -n vigeas_illumina -c conda-forge -c bioconda bwa fastp ivar mafft samtools seqkit
    fi
    if [[ -z $(micromamba env list | grep vigeas_nanopore) ]]; then
        micromamba create -y -n vigeas_nanopore -c conda-forge -c bioconda artic exonerate medaka mafft seqkit seqtk
    fi
    if [[ -z $(micromamba env list | grep vigeas_pycoqc) ]]; then
        micromamba create -y -n vigeas_pycoqc -c conda-forge -c bioconda python=3.6 pycoqc
    fi
    if [[ -z $(micromamba env list | grep vigeas_sars2) ]]; then
        micromamba create -y -n vigeas_sars2 -c conda-forge -c bioconda nextclade pangolin
    fi
    if [[ -z $(micromamba env list | grep vigeas_summary) ]]; then
        micromamba create -y -n vigeas_summary -c conda-forge -c bioconda exonerate ghostscript r-base r-cowplot r-dplyr r-ggplot2 r-patchwork r-plyr r-readr r-svglite samtools seqkit seqtk
    fi
    echo "micromamba:" && micromamba --version && echo "" && echo "environments:" && micromamba env list | grep vigeas
fi

GUPPY_VER=6.5.7 # Updated 27 May 2023
if [[ -z $(which guppy_basecaller) ]]; then
    cd
    wget https://cdn.oxfordnanoportal.com/software/analysis/ont-guppy_"$GUPPY_VER"_linux64.tar.gz -O ont-guppy.tar.gz
    tar -vzxf ont-guppy.tar.gz
    rm -rf ont-guppy.tar.gz
    echo 'export PATH=$HOME/ont-guppy/bin:/usr/local/share/rsi/idl/bin:$PATH' >> ~/.[bz]shrc
elif [[ $(guppy_barcoder --version | awk -F" " '{print $NF}' | awk -F+ '{print $1}' | sed -n '1p') != "$GUPPY_VERSION" ]]; then
    cd
    rm -rf ont-guppy
    wget https://cdn.oxfordnanoportal.com/software/analysis/ont-guppy_"$GUPPY_VER"_linux64.tar.gz -O ont-guppy.tar.gz
    tar -vzxf ont-guppy.tar.gz
    rm -rf ont-guppy.tar.gz
    echo 'export PATH=$HOME/ont-guppy/bin:/usr/local/share/rsi/idl/bin:$PATH' >> ~/.[bz]shrc
else
    guppy_basecaller --version
fi

DORADO_VER=0.3.4 # Updated 05 Sep 2023
if [[ -z $(which dorado) ]]; then
    cd
    wget https://cdn.oxfordnanoportal.com/software/analysis/dorado-"$DORADO_VER"-linux-x64.tar.gz -O dorado.tar.gz
    tar -vzxf dorado.tar.gz
    rm -rf dorado.tar.gz
    mv dorado-"$DORADO_VER"-linux-x64 ont-dorado
    echo 'export PATH=$HOME/ont-dorado/bin:$PATH' >> ~/.[bz]shrc
    source ~/.[bz]shrc
    dorado download --directory dorado-linux-x64/models
    pip install pod5
    echo 'export PATH=$HOME/.local/bin:$PATH' >> ~/.[bz]shrc
    source ~/.[bz]shrc
elif [[ $(dorado --version 2>&1 | awk -F+ '{print $1}') != "$DORADO_VER" ]]; then
    cd
    wget https://cdn.oxfordnanoportal.com/software/analysis/dorado-"$DORADO_VER"-linux-x64.tar.gz -O dorado.tar.gz
    tar -vzxf dorado.tar.gz
    rm -rf dorado.tar.gz
    mv dorado-"$DORADO_VER"-linux-x64 ont-dorado
    echo 'export PATH=$HOME/ont-dorado/bin:$PATH' >> ~/.[bz]shrc
    source ~/.[bz]shrc
    dorado download --directory dorado-linux-x64/models
    pip install pod5
    echo 'export PATH=$HOME/.local/bin:$PATH' >> ~/.[bz]shrc
    source ~/.[bz]shrc
else
    dorado --version
fi
