#!/bin/bash

if [[ -n "$MAMBA_EXE" ]]; then
    if [[ "$MAMBA_EXE" == *"micromamba"* ]]; then
        eval "$($MAMBA_EXE shell hook -s posix)"
        ENV_MANAGER=micromamba
    else
        ENV_MANAGER=mamba
    fi
elif [[ -n "$CONDA_EXE" ]]; then
    ENV_MANAGER=conda
fi

version() {
    echo "
vigeas [VIral GEnome ASsembly pipelines for WGS]
Written by Laise de Moraes <laise.moraes@fiocruz.br>

  Main script: September 24, 2025

  ILLUMINA workflows: May 23, 2025
  ONT workflows: September 25, 2025
"
    exit 1
}

usage() {
    echo "
vigeas [VIral GEnome ASsembly pipelines for WGS]
Written by Laise de Moraes <laise.moraes@fiocruz.br>

Usage: vigeas <command> or <miscellaneous>

Commands:
  ill   For Illumina Sequencing [*.fastQ data]
  ont   For ONT Sequencing [*.pod5 data]

Miscellaneous:
  clr3     List supported Clair3 models
  makedb   Create a BLAST database in this workflow -- for <vigeas ill -x hyb>
  panels   List available enrichment panels in this workflow -- for <vigeas ill -x hyb>
  primers  List available primer schemes in this workflow -- for <vigeas ill -x amp> and <vigeas ont -x bda>
  update   Update conda/mamba dependencies
  version  Show last update information
"
    exit 1
}

enrichment_panels() {
    echo "
------------------------------------------------------------
 enrichment_panel                                  panel_id
------------------------------------------------------------
 [*] Illumina Respiratory Pathogen ID/AMR Panel    RPIP
 [*] Illumina Respiratory Virus Oligo Panel        RVOP
 [*] Illumina Viral Surveillance Panel v1          VSP1
 [*] Illumina Viral Surveillance Panel v2          VSP2
 [*] Influenza                                     FLU
------------------------------------------------------------
* Included Refs of Human Influenza Vaccine Composition of 2025-2026 Northern Hemisphere Influenza Season
  (https://gisaid.org/resources/human-influenza-vaccine-composition)
"
    exit 1
}

primer_schemes() {
    echo "
--------------------------------------------------------------------------------------------------------------------
     target        amplicon_size    primer_scheme_id       url_reference
--------------------------------------------------------------------------------------------------------------------
 [*] CHIKV         ~400bp           ChikAsianECSA_V1       https://github.com/zibraproject/zika-pipeline
 [*] DENV-1        ~400bp           DENGUESEQ1_V1          https://dx.doi.org/10.17504/protocols.io.kqdg39xxeg25/v2
 [*] DENV-2        ~400bp           DENGUESEQ2_V1          https://dx.doi.org/10.17504/protocols.io.kqdg39xxeg25/v2
 [*] DENV-3        ~400bp           DENGUESEQ3_V1          https://dx.doi.org/10.17504/protocols.io.kqdg39xxeg25/v2
 [*] DENV-4        ~400bp           DENGUESEQ4_V1          https://dx.doi.org/10.17504/protocols.io.kqdg39xxeg25/v2
 [*] DENV (PAN)    ~400bp           DENGUESEQPAN_V1        https://dx.doi.org/10.17504/protocols.io.kqdg39xxeg25/v2
     EBOV          ~1,000b          ZaireEbola_V1          https://github.com/artic-network/artic-ncov2019
     EBOV          ~500bp           ZaireEbola_V2          https://github.com/artic-network/artic-ncov2019
     EBOV          ~400bp           ZaireEbola_V3          https://github.com/artic-network/artic-ncov2019
     HIV-1         ~2,000bp         HIV1Sanabani2006_V1    https://doi.org/10.1089/aid.2006.22.171
     LASV (L)      ~400bp           LassaL_V1              https://github.com/zibraproject/zika-pipeline
     LASV (S)      ~400bp           LassaS_V1              https://github.com/zibraproject/zika-pipeline
     MPOXV         ~2,000bp         MPXV_V1                https://dx.doi.org/10.17504/protocols.io.5qpvob1nbl4o/v2
     NiV           ~400bp           Nipah_V1               https://github.com/artic-network/artic-ncov2019
     OROV (L)      ~400bp           OROV400L_V1            https://github.com/zibraproject/zika-pipeline
     OROV (M)      ~400bp           OROV400M_V1            https://github.com/zibraproject/zika-pipeline
     OROV (S)      ~400bp           OROV400S_V1            https://github.com/zibraproject/zika-pipeline
 [*] SARS-CoV-2    ~400bp           ARTIC_V1               https://github.com/artic-network/artic-ncov2019
 [*] SARS-CoV-2    ~400bp           ARTIC_V2               https://github.com/artic-network/artic-ncov2019
 [*] SARS-CoV-2    ~400bp           ARTIC_V3               https://github.com/artic-network/artic-ncov2019
 [*] SARS-CoV-2    ~400bp           ARTIC_V4               https://github.com/artic-network/artic-ncov2019
 [*] SARS-CoV-2    ~400bp           ARTIC_V4_1             https://github.com/artic-network/artic-ncov2019
 [*] SARS-CoV-2    ~400bp           ARTIC_V5_3_2           https://github.com/quick-lab/SARS-CoV-2
     SARS-CoV-2    ~1,200bp         MIDNIGHT_V1            https://doi.org/10.1093/biomethods/bpaa014
     SARS-CoV-2    ~1,200bp         MIDNIGHT_V2            https://doi.org/10.1093/biomethods/bpaa014
 [*] SARS-CoV-2    ~2,000bp         FIOCRUZ-IOC_V1         https://doi.org/10.1101/2020.04.30.069039
 [*] SARS-CoV-2    ~2,000bp         FIOCRUZ-IOC_V2         https://doi.org/10.1101/2020.04.30.069039
 [*] RSV (A/B)     ~1,500bp         RSV_V1                 https://dx.doi.org/10.17504/protocols.io.eq2lyjzbrlx9/v1
 [*] RSV (A/B)     ~1,500bp         RSV_V2                 https://dx.doi.org/10.17504/protocols.io.eq2lyjzbrlx9/v2
 [*] RSV (A/B)     ~1,500bp         RSV_V3                 https://dx.doi.org/10.17504/protocols.io.eq2lyjzbrlx9/v3
     YFV           ~500bp           YFV500_V1              https://github.com/zibraproject/zika-pipeline
     YFV           ~1,000bp         YFV1000_V1             https://github.com/zibraproject/zika-pipeline
 [*] ZIKV          ~400bp           ZikaAsian_V2           https://github.com/zibraproject/zika-pipeline
--------------------------------------------------------------------------------------------------------------------
* Primer Schemes validated in this workflow
"
    exit 1
}

update() {
    "$ENV_MANAGER" update -y -n vigeas-ill -c conda-forge -c bioconda --all
    "$ENV_MANAGER" update -y -n vigeas-ont -c defaults -c conda-forge -c bioconda --all
    "$ENV_MANAGER" update -y -n vigeas-stats -c conda-forge -c bioconda --all
    exit 1
}

clr3() {
    find "$HOME"/rerio/clair3_models/* -type d -o -type l | awk -F/ '{print $NF}'
    exit 1
    }

makedb() {
    usage_makedb() {
        echo "
vigeas [VIral GEnome ASsembly pipelines for WGS]
Written by Laise de Moraes <laise.moraes@fiocruz.br>

Usage: vigeas makedb [options]

Options: -f STR  Path containing the *.fasta with the reference genomes
         -t STR  Path containing the *.tsv metadata of the genome references
"
        exit 1
    }

    if [ $# -lt 1 ]; then
        usage_makedb
    fi

    while getopts "f:t:" OPT; do
        case "$OPT" in
            f) FASTA="$OPTARG";;
            t) METADATA="$OPTARG";;
            *) usage_ill;;
        esac
    done

    if [[ -z "$FASTA" ]]; then
        usage_makedb
    else
        "$ENV_MANAGER" activate vigeas-ill
        DATABASE_NAME="$(basename $FASTA | awk -F/ '{print $NF}' | awk -F. '{print $1}')"
        cp "$FASTA" "$HOME/vigeas/blastdb/$DATABASE_NAME.fasta"
        [[ -n "$DATABASE_NAME" && -n "$METADATA" && -f "$METADATA" ]] && cp "$METADATA" "$HOME/vigeas/blastdb/$DATABASE_NAME.tsv"
        makeblastdb -in "$HOME/vigeas/blastdb/$DATABASE_NAME.fasta" -dbtype nucl -out "$HOME/vigeas/blastdb/$DATABASE_NAME"
        awk -v home="$HOME" '/^>/{if(s) close(s); s=home "/vigeas/refseq/" substr($0,2) ".fasta"; print > s; next}{if(s) print >> s}' "$HOME/vigeas/blastdb/RVOP.fasta"
        find "$HOME/vigeas/refseq/" -type f -name "*.fasta" -exec sh -c '[ ! -f "$1.fai" ] && samtools faidx "$1"' _ {} \;
    fi
    exit 0
}

ill() {
    NPROC=$(nproc)

    usage_ill() {
        echo "
vigeas [VIral GEnome ASsembly pipelines for WGS]
Written by Laise de Moraes <laise.moraes@fiocruz.br>

Usage: vigeas ill -x <preset> [options]

Preset:  -x STR   Always applied before other options []
                  - amp - For libraries using Illumina Amplicon Chemistry [*.fastQ data]
                  - hyb - For libraries using Illumina Hybrid-Capture Chemistry [*.fastQ data]

Options: -d INT   Minimum depth to variant calling [default: 10]
         -i STR   Path containing the *.fastQ data
         -p INT   Identity[%] in the BLAST used to select reference sequences [only for -x hyb] [default: 90]
         -s STR   Path containing the Illumina samplesheet [basic format: sample_id,primers_cheme or sample_id,hyb_panel]
         -t INT   Max number of threads [default: $((NPROC - 2))]
         -u       For assembly using Single-End reads
"
        exit 1
    }

    if [ $# -lt 1 ]; then
        usage_ill
    fi

    while getopts "d:i:p:s:t:x:u" OPT; do
        case "$OPT" in
            d) DEPTH="$OPTARG";;
            i) INPUT="$OPTARG";;
            s) SAMPLE_SHEET="$OPTARG";;
            p) PIDENT="$OPTARG";;
            t) THREADS="$OPTARG";;
            x) PRESET="$OPTARG";;
            u) SE=1;;
            *) usage_ill;;
        esac
    done

    if [[ -z "$PRESET" ]] || [[ -z "$INPUT" ]] || [[ -z "$SAMPLE_SHEET" ]]; then
        usage_ill
    else
        LIBRARY_NAME="$(basename $SAMPLE_SHEET | awk -F. '{print $1}')"
        ASSEMBLY_DIR="$HOME/vigeas/${LIBRARY_NAME}_ASSEMBLY"
        [[ ! -d "$ASSEMBLY_DIR" ]] && mkdir "$ASSEMBLY_DIR" && chmod 700 -R "$ASSEMBLY_DIR"
        echo "" && echo "Output path: $ASSEMBLY_DIR"
        echo "" && echo "Log Analysis: $ASSEMBLY_DIR/$LIBRARY_NAME.log.$(uname -n).$(date +'%Y-%m-%d').txt"
        echo "" && echo "To display the log output in fulscreen: watch tail -n 20 $ASSEMBLY_DIR/$LIBRARY_NAME.log.$(uname -n).$(date +'%Y-%m-%d').txt" && echo ""
    fi

    bg() {
        start=$(date +%s.%N)
        if [[ -z "$THREADS" ]]; then
            if ((NPROC > 2)); then
                THREADS=$((NPROC - 2))
            else
                THREADS=2
            fi
        fi
        if [[ -z "$DEPTH" ]]; then
            DEPTH=10
        fi
        if [[ -z "$PIDENT" ]]; then
            PIDENT=90
        fi
        if grep -q "Experiment Name" "$SAMPLE_SHEET"; then
            cat "$SAMPLE_SHEET" | tr -dc '[:print:]\n' | sed -e '1,18d' | awk -F, '{print $1","$NF}' | sort > "$ASSEMBLY_DIR/.samplesheet"
            SAMPLE_SHEET="$ASSEMBLY_DIR/.samplesheet"
        fi
        if [[ -z "$PRESET" ]] || [[ -z "$INPUT" ]] || [[ -z "$SAMPLE_SHEET" ]]; then
            usage_ill
        else
            "$ENV_MANAGER" list -n vigeas-ill 'bbmap|blast|bwa-mem2|entrez-direct|exonerate|fastp|ivar|mafft|samtools|seqkit|seqtk|spades' && echo ""
            echo "" && "$ENV_MANAGER" list -n vigeas-stats 'exonerate|ghostscript|r-base|r-cowplot|r-dplyr|r-ggplot2|r-patchwork|r-plyr|r-readr|r-svglite|samtools|seqkit|seqtk' && echo ""
            while IFS= read -r ID; do
                R1=$(find "$INPUT" -type f -regex ".*/${ID}.*\(_R1\|_1\|\.R1\).*\.fastq\.gz" -print -quit)
                R2=$(find "$INPUT" -type f -regex ".*/${ID}.*\(_R2\|_2\|\.R2\).*\.fastq\.gz" -print -quit)
                if [[ -n "$R1" ]]; then
                    cp -v "$R1" "$ASSEMBLY_DIR/${ID}.R1.fastq.gz"
                    [[ -n "$R2" ]] && cp -v "$R2" "$ASSEMBLY_DIR/${ID}.R2.fastq.gz"
                    continue
                fi
            done < <(awk -F, '{print $1}' "$SAMPLE_SHEET")
            if [[ "${PRESET,,}" == "amp" ]]; then
                while IFS= read -r DESCRIPTION || [ -n "$DESCRIPTION" ]; do
                    "$ENV_MANAGER" activate vigeas-ill
                    SAMPLE_ID=$(echo "$DESCRIPTION" | awk -F, '{print $1}')
                    mkdir "$ASSEMBLY_DIR"/"$SAMPLE_ID"
                    echo "" && echo "$SAMPLE_ID"
                    fastp --thread "$THREADS" -f 0 -t 0 -F 0 -T 0 --cut_front --cut_tail --qualified_quality_phred 20 -l 75 -i "$ASSEMBLY_DIR/$SAMPLE_ID.R1.fastq.gz" -I "$ASSEMBLY_DIR/$SAMPLE_ID.R2.fastq.gz" -o "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R1.fastq.gz" -O "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R2.fastq.gz" -h "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.html" -j "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.json"
                    "$ENV_MANAGER" deactivate
                    if echo "$DESCRIPTION" | grep -Eq "RSV_V[1-9]"; then
                        PRIMER_SCHEME_VER=$(grep -o "RSV_V[1-9]" < "$SAMPLE_SHEET" | sort -u | awk -F'_V' '{print $2}')
                        for version in "$PRIMER_SCHEME_VER"; do
                            PRIMER_SCHEME_VER="$version"
                            for type in RSVA RSVB; do
                                "$ENV_MANAGER" activate vigeas-ill
                                PRIMER_SCHEME="$type"
                                PRIMER_SCHEME_DIR=$(echo "${PRIMER_SCHEME}_V${PRIMER_SCHEME_VER}" | sed -e 's/RSVA_V1/RSVA\/V1/g' -e 's/RSVA_V2/RSVA\/V2/g' -e 's/RSVA_V3/RSVA\/V3/g' -e 's/RSVB_V1/RSVB\/V1/g' -e 's/RSVB_V2/RSVB\/V2/g' -e 's/RSVB_V3/RSVB\/V3/g')
                                [[ ! -f "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta.ann" ]] && bwa-mem2 index -p "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta"
                                bbsplit.sh build=1 in="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R1.fastq.gz" in2="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R2.fastq.gz" ref_a="$HOME/vigeas/primer_schemes/RSVA/V${PRIMER_SCHEME_VER}/RSVA.reference.fasta" out_a="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.RSVA.fastq.gz" ref_b="$HOME/vigeas/primer_schemes/RSVB/V{$PRIMER_SCHEME_VER}/RSVB.reference.fasta" out_b="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.RSVB.fastq.gz"
                                bwa-mem2 mem -t "$THREADS" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.$PRIMER_SCHEME.fastq.gz" | ivar trim -e -m 32 -q 15 -b "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.bam"
                                samtools sort -o "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.bam"
                                samtools index "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam"
                                samtools mpileup -a -A -d 0 --reference "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" -B "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" | ivar variants -q 20 -t 0.03 -m "$DEPTH" -p "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME" -r "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta"
                                samtools mpileup -a -A -d 0 --reference "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" -B "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" | ivar consensus -t 0 -m "$DEPTH" -p "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}"
                                sed -i -e "s/>.*/>${SAMPLE_ID}_${PRIMER_SCHEME}/g" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}.fa"
                                mafft --thread "$THREADS" --quiet --auto --inputorder --6merpair --leavegappyregion --addfragments "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}.fa" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" | seqkit grep -ip "${SAMPLE_ID}_${PRIMER_SCHEME}" | sed '/>/!y/atcgn/ATCGN/' >> "$ASSEMBLY_DIR/$LIBRARY_NAME.consensus.RSV.$(uname -n).$(date +'%Y-%m-%d').fasta"
                                rm -rf "$ASSEMBLY_DIR/$SAMPLE_ID.*.fastq.gz"
                                "$ENV_MANAGER" deactivate
                                "$ENV_MANAGER" activate vigeas-stats
                                samtools depth -a "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth.tsv"
                                [[ ! -f "$ASSEMBLY_DIR/.summary" ]] && {
                                    echo -e "primer_scheme\tsample_id\tnum_total_reads\tnum_mapp_reads\tavg_depth\tdepth_10x\tdepth_100x\tdepth_1000x\tref_cov\tncount\tncount_perc" > "$ASSEMBLY_DIR/.summary"
                                }
                                {
                                    printf "\n"
                                    printf "%s\t" "${PRIMER_SCHEME}_${PRIMER_SCHEME_VER}"
                                    printf "%s\t" "${SAMPLE_ID}"
                                    seqkit stats "$ASSEMBLY_DIR/$SAMPLE_ID.R1.fastq.gz" | awk 'NR==2{gsub(/,/, "", $4); printf "%s\t", $4}'
                                    samtools view -F 4 -c "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.bam" | awk '{printf "%s\t", $1}'
                                    AVG_DEPTH=$(samtools depth "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" | awk '{sum+=$3} END {print (NR>0) ? sum/NR : 0}')
                                    printf "%.2f\t" "$AVG_DEPTH"
                                    REF_LEN=$(fastalength "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" | awk '{print $1}')
                                    for depth in 10 100 1000; do
                                        samtools depth "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" | awk -v cutoff="$depth" -v reflen="$REF_LEN" '$3 > cutoff {covered++} END {printf "%.2f\t", (reflen>0) ? covered/reflen*100 : 0}'
                                    done
                                    if [[ ! -s "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}.fa" ]] || ! grep -v "^>" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}.fa" | grep -q "[ACGTacgtNn]"; then
                                        printf "0.00\t0\t100.00\n"
                                    else
                                        N_COUNT=$(seqtk comp "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}.fa" | awk '{print $9}')
                                        printf "%.2f\t" "$(( (REF_LEN - N_COUNT) * 100 / REF_LEN ))"
                                        printf "%d\t" "$N_COUNT"
                                        printf "%.2f\n" "$(( N_COUNT * 100 / REF_LEN ))"
                                    fi
                                } >> "$ASSEMBLY_DIR/.summary"
                                Rscript "$HOME/vigeas/scripts/depthCoverage.R" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth.tsv" "$SAMPLE_ID" "$PRIMER_SCHEME_DIR" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID"
                                for target in $(find "$ASSEMBLY_DIR/$SAMPLE_ID" -type f -name '*-coverage.pdf' | awk -F. '{print substr($2, 1, 3)}' | sort -u); do
                                    gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.rsv-coverage.pdf" "$ASSEMBLY_DIR"/"$SAMPLE_ID"/"$SAMPLE_ID".$target*coverage.pdf
                                done
                                "$ENV_MANAGER" deactivate
                            done
                        done
                    else
                        "$ENV_MANAGER" activate vigeas-ill
                        if echo "$DESCRIPTION" | grep -Eq "DENGUESEQPAN_V[1-9]"; then
                            seqkit range "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R1.fastq.gz" -r 1:1000 | seqkit fq2fa | blastn -num_threads "$THREADS" -db "$HOME/vigeas/blastdb/DENGUESEQPAN" -out "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.blastn.txt" -outfmt "6 qseqid sseqid pident length"
                            PRIMER_SCHEME=$(cut -f 2 "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.blastn.txt" | sort | uniq -c | sort -nr | head -n 1 | awk '{print $2}')
                            PRIMER_SCHEME_VER=$(grep -o "DENGUESEQPAN_V[1-9]" < "$SAMPLE_SHEET" | sort -u | awk -F'_' '{print $2}')
                            PRIMER_SCHEME_DIR=$(echo "${PRIMER_SCHEME}_${PRIMER_SCHEME_VER}" | sed -e 's/DENGUESEQ1_V1/DENGUESEQ1\/V1/g' -e 's/DENGUESEQ2_V1/DENGUESEQ2\/V1/g' -e 's/DENGUESEQ3_V1/DENGUESEQ3\/V1/g' -e 's/DENGUESEQ4_V1/DENGUESEQ4\/V1/g')
                            [[ ! -f "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta.ann" ]] && bwa-mem2 index -p "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta"
                        else
                            PRIMER_SCHEME=$(echo "$DESCRIPTION" | awk -F, '{print $2}' | cut -d'_' -f1)
                            PRIMER_SCHEME_VER=$(echo "$DESCRIPTION" | awk -F, '{print $2}' | cut -d'_' -f2-)
                            PRIMER_SCHEME_DIR=$(echo "${PRIMER_SCHEME}_${PRIMER_SCHEME_VER}" | sed -e 's/ARTIC_V1/ARTIC\/V1/g' -e 's/ARTIC_V2/ARTIC\/V2/g' -e 's/ARTIC_V3/ARTIC\/V3/g' -e 's/ARTIC_V4/ARTIC\/V4/g' -e 's/ARTIC\/V4_1/ARTIC\/V4.1/g' -e 's/ARTIC_V5_3_2/ARTIC\/V5.3.2/g' -e 's/ChikAsianECSA_V1/ChikAsianECSA\/V1/g' -e 's/DENGUESEQ1_V1/DENGUESEQ1\/V1/g' -e 's/DENGUESEQ2_V1/DENGUESEQ2\/V1/g' -e 's/DENGUESEQ3_V1/DENGUESEQ3\/V1/g' -e 's/DENGUESEQ4_V1/DENGUESEQ4\/V1/g' -e 's/FIOCRUZ-IOC_V1/FIOCRUZ-IOC\/V1/g' -e 's/FIOCRUZ-IOC_V2/FIOCRUZ-IOC\/V2/g' -e 's/CCEMHTLV1_V1/CCEMHTLV1\/V1/g' -e 's/LassaL_V1/LassaL\/V1/g' -e 's/LassaS_V1/LassaS\/V1/g' -e 's/MIDNIGHT_V1/MIDNIGHT\/V1/g' -e 's/MIDNIGHT_V2/MIDNIGHT\/V2/g' -e 's/MPXV_V1/MPXV\/V1/g' -e 's/Nipah_V1/Nipah\/V1/g' -e 's/OROV400L_V1/OROV400L\/V1/g' -e 's/OROV400M_V1/OROV400M\/V1/g' -e 's/OROV400S_V1/OROV400S\/V1/g' -e 's/WNV400_V1/WNV400\/V1/g' -e 's/YFV500_V1/YFV500\/V1/g' -e 's/YFV1000_V1/YFV1000\/V1/g' -e 's/ZaireEbola_V1/ZaireEbola\/V1/g' -e 's/ZikaAsian_V1/ZikaAsian\/V1/g' -e 's/ZikaAsian_V2/ZikaAsian\/V2/g' -e 's/HTLV1DemincoF_V1/HTLV1DemincoF\/V1/g' -e 's/DENV1CADDE_V1/DENV1CADDE\/V1/g' -e 's/DENV2CADDE_V1/DENV2CADDE\/V1/g' -e 's/DENV3CADDE_V1/DENV3CADDE\/V1/g' -e 's/DENV4CADDE_V1/DENV4CADDE\/V1/g')
                            [[ ! -f "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta.ann" ]] && bwa-mem2 index -p "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta"
                        fi
                        bbsplit.sh build=1 in="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R1.fastq.gz" in2="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R2.fastq.gz" ref="$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" out="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.fastq.gz"
                        bwa-mem2 mem -t "$THREADS" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.fastq.gz" | ivar trim -e -m 32 -q 15 -b "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.bam"
                        samtools sort -o "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.bam"
                        samtools index "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam"
                        samtools mpileup -a -A -d 0 --reference "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" -B "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" | ivar variants -q 20 -t 0.03 -m "$DEPTH" -p "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID" -r "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta"
                        samtools mpileup -a -A -d 0 --reference "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" -B "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" | ivar consensus -t 0 -m "$DEPTH" -p "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}"
                        sed -i -e "s/>.*/>${SAMPLE_ID}/g" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.fa"
                        mafft --thread "$THREADS" --quiet --auto --inputorder --6merpair --leavegappyregion --addfragments "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.fa" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" | seqkit grep -ip "$SAMPLE_ID" | sed '/>/!y/atcgn/ATCGN/' >> "$ASSEMBLY_DIR/$LIBRARY_NAME.consensus.$PRIMER_SCHEME.$(uname -n).$(date +'%Y-%m-%d').fasta"
                        rm -rf "$ASSEMBLY_DIR/$SAMPLE_ID.*.fastq.gz"
                        "$ENV_MANAGER" deactivate
                        "$ENV_MANAGER" activate vigeas-stats
                        samtools depth -a "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth.tsv"
                        [[ ! -f "$ASSEMBLY_DIR/.summary" ]] && {
                            echo -e "primer_scheme\tsample_id\tnum_total_reads\tnum_mapp_reads\tavg_depth\tdepth_10x\tdepth_100x\tdepth_1000x\tref_cov\tncount\tncount_perc" > "$ASSEMBLY_DIR/.summary"
                        }
                        {
                            printf "\n"
                            printf "%s\t" "${PRIMER_SCHEME}_${PRIMER_SCHEME_VER}"
                            printf "%s\t" "${SAMPLE_ID}"
                            seqkit stats "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.fastq.gz" | awk 'NR==2{gsub(/,/, "", $4); printf "%s\t", $4}'
                            samtools view -F 4 -c "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.bam" | awk '{printf "%s\t", $1}'
                            AVG_DEPTH=$(samtools depth "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" | awk '{sum+=$3} END {print (NR>0) ? sum/NR : 0}')
                            printf "%.2f\t" "$AVG_DEPTH"
                            REF_LEN=$(fastalength "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" | awk '{print $1}')
                            for depth in 10 100 1000; do
                                samtools depth "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" | awk -v cutoff="$depth" -v reflen="$REF_LEN" '$3 > cutoff {covered++} END {printf "%.2f\t", (reflen>0) ? covered/reflen*100 : 0}'
                            done
                            if [[ ! -s "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.fa" ]] || ! grep -v "^>" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.fa" | grep -q "[ACGTacgtNn]"; then
                                printf "0.00\t0\t100.00\n"
                            else
                                N_COUNT=$(seqtk comp "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.fa" | awk '{print $9}')
                                printf "%.2f\t" "$(( (REF_LEN - N_COUNT) * 100 / REF_LEN ))"
                                printf "%d\t" "$N_COUNT"
                                printf "%.2f\n" "$(( N_COUNT * 100 / REF_LEN ))"
                            fi
                        } >> "$ASSEMBLY_DIR/.summary"
                        Rscript "$HOME/vigeas/scripts/depthCoverage.R" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth.tsv" "$SAMPLE_ID" "$PRIMER_SCHEME_DIR" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID"
                        "$ENV_MANAGER" deactivate
                    fi
                done < "$SAMPLE_SHEET"
                "$ENV_MANAGER" activate vigeas-stats
                for target in $(find "$ASSEMBLY_DIR" -type f -name '*coverage.pdf' | awk -F. '{print $(NF-1)}' | awk -F- '{print $1}' | sort -u); do
                    gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$ASSEMBLY_DIR/$LIBRARY_NAME.$target-coverage.$(uname -n).$(date +'%Y-%m-%d').pdf" "$ASSEMBLY_DIR"/*/*.$target-coverage.pdf
                done
                "$ENV_MANAGER" deactivate
            elif [[ "${PRESET,,}" == "hyb" ]]; then
                [[ ! -f "$ASSEMBLY_DIR/.summary" ]] && {
                    echo -e "sample_id\tref_seq\ttarget\tsegment\tflu_vaccine\tnum_total_reads\tnum_mapp_reads\tavg_depth\tdepth_10x\tdepth_100x\tdepth_1000x\tref_cov\tncount\tncount_perc" > "$ASSEMBLY_DIR/.summary"
                }
                while IFS= read -r DESCRIPTION || [ -n "$DESCRIPTION" ]; do
                    SAMPLE_ID=$(echo "$DESCRIPTION" | awk -F, '{print $1}')
                    PANEL=$(echo "$DESCRIPTION" | awk -F, '{print $2}')
                    echo "" && echo "$SAMPLE_ID" && echo "$PANEL"
                    mkdir "$ASSEMBLY_DIR"/"$SAMPLE_ID"
                    "$ENV_MANAGER" activate vigeas-ill
                    if [[ "$SE" == 1 ]]; then
                        fastp --thread "$THREADS" -f 0 -t 0 -F 0 -T 0 --cut_front --cut_tail --qualified_quality_phred 20 -l 75 -i "$ASSEMBLY_DIR/$SAMPLE_ID.R1.fastq.gz" -o "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R1.fastq.gz" -h "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.html" -j "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.json"
                        spades.py -t "$THREADS" --metaviral -s "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R1.fastq.gz" -o "$ASSEMBLY_DIR/$SAMPLE_ID/denovo"
                    else
                        fastp --thread "$THREADS" -f 0 -t 0 -F 0 -T 0 --cut_front --cut_tail --qualified_quality_phred 20 -l 75 -i "$ASSEMBLY_DIR/$SAMPLE_ID.R1.fastq.gz" -I "$ASSEMBLY_DIR/$SAMPLE_ID.R2.fastq.gz" -o "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R1.fastq.gz" -O "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R2.fastq.gz" -h "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.html" -j "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.json"
                        spades.py -t "$THREADS" --metaviral -1 "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R1.fastq.gz" -2 "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R2.fastq.gz" -o "$ASSEMBLY_DIR/$SAMPLE_ID/denovo"
                    fi
                    if [ -f "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/transcripts.fasta" ]; then
                        blastn -num_threads "$THREADS" -word_size 21 -query "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/transcripts.fasta" -db "$HOME/vigeas/blastdb/$PANEL" -out "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.blastn.txt" -outfmt "6 qseqid sseqid pident length"
                        seqtk seq -F '!' "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/transcripts.fasta" > "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/transcripts.fastq"
                        gzip "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/transcripts.fastq"
                        cat "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R1.fastq.gz" "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/transcripts.fastq" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.concat.R1.fastq.gz"
                    elif [ -f "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/before_rr.fasta" ]; then
                        blastn -num_threads "$THREADS" -word_size 21 -query "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/before_rr.fasta" -db "$HOME/vigeas/blastdb/$PANEL" -out "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.blastn.txt" -outfmt "6 qseqid sseqid pident length"
                        seqtk seq -F '!' "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/before_rr.fasta" > "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/before_rr.fastq"
                        gzip "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/before_rr.fastq"
                        cat "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R1.fastq.gz" "$ASSEMBLY_DIR/$SAMPLE_ID/denovo/before_rr.fastq.gz" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.concat.R1.fastq.gz"
                    else
                        seqkit fq2fa "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R1.fastq.gz" | blastn -db "$HOME/vigeas/blastdb/$PANEL" -out "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.blastn.txt" -outfmt "6 qseqid sseqid pident length"
                    fi
                    "$ENV_MANAGER" deactivate
                    while IFS= read -r REFSEQ; do
                        awk -v pident="$PIDENT" -F"\t" '$3 >= pident {print $2}' "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.blastn.txt" | sort -u
                        echo ""
                        {
                            printf "%s\t" "${SAMPLE_ID}"
                            grep "^$REFSEQ" "$HOME/vigeas/blastdb/$PANEL.tsv" | awk -F"\t" '{if ($3 == "" || $3 == " " || gsub(/\t/, "", $3) == 0) {printf "%s\t%s\t%s\t%s\t", $1, $2, $3, $4} else {printf "%s\t", $0}}'
                        } >> "$ASSEMBLY_DIR/.summary"
                        "$ENV_MANAGER" activate vigeas-ill
                        bwa-mem2 index -p "$HOME/vigeas/refseq/$REFSEQ" "$HOME/vigeas/refseq/$REFSEQ.fasta"
                        if [[ "$SE" == 1 ]]; then
                            bwa-mem2 mem -t "$THREADS" "$HOME/vigeas/refseq/$REFSEQ" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.concat.R1.fastq.gz" | samtools sort - > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.concat.sorted.bam"
                        else
                            bwa-mem2 mem -t "$THREADS" "$HOME/vigeas/refseq/$REFSEQ" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.concat.R1.fastq.gz" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R2.fastq.gz" | samtools sort - > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.concat.sorted.bam"
                        fi
                        samtools index "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.concat.sorted.bam"
                        samtools consensus -m simple -a -aa -A -d 1 -@ "$THREADS" --show-del no --show-ins yes -f fasta "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.concat.sorted.bam" -o "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.concat.fasta"
                        bwa-mem2 index -p "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.concat" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.concat.fasta"
                        if [[ "$SE" == 1 ]]; then
                            bwa-mem2 mem -t "$THREADS" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.concat" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.concat.R1.fastq.gz" | samtools sort - > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.sorted.bam"
                        else
                            bwa-mem2 mem -t "$THREADS" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.concat" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.concat.R1.fastq.gz" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.R2.fastq.gz" | samtools sort - > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.sorted.bam"
                        fi
                        samtools index "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.sorted.bam"
                        {
                            seqkit stats "$ASSEMBLY_DIR/$SAMPLE_ID.R1.fastq.gz" | awk 'NR==2{gsub(/,/, "", $4); printf "%s\t", $4}'
                            samtools view -F 4 -c "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.sorted.bam" | awk '{printf "%s\t", $1}'
                        } >> "$ASSEMBLY_DIR/.summary"
                        samtools depth -a "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.sorted.bam" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.depth.tsv"
                        samtools mpileup -a -A -d 0 --reference "$HOME/vigeas/refseq/$REFSEQ.fasta" -B "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.sorted.bam" | ivar variants -q 20 -t 0.03 -m "$DEPTH" -p "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ" -r "$HOME/vigeas/refseq/$REFSEQ.fasta"
                        samtools mpileup -a -A -d 0 --reference "$HOME/vigeas/refseq/$REFSEQ.fasta" -B "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.sorted.bam" | ivar consensus -t 0 -m "$DEPTH" -p "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.depth${DEPTH}"
                        sed -i -e "s/>.*/>${SAMPLE_ID}/g" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.depth${DEPTH}.fa"
                        "$ENV_MANAGER" deactivate
                        "$ENV_MANAGER" activate vigeas-stats
                        {
                            AVG_DEPTH=$(samtools depth "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.sorted.bam" | awk '{sum+=$3} END {print (NR>0) ? sum/NR : 0}')
                            printf "%.2f\t" "$AVG_DEPTH"
                            REF_LEN=$(fastalength "$HOME/vigeas/refseq/$REFSEQ.fasta" | awk '{print $1}')
                            for depth in 10 100 1000; do
                                samtools depth "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.trimmed.sorted.bam" | awk -v cutoff="$depth" -v reflen="$REF_LEN" '$3 > cutoff {covered++} END {printf "%.2f\t", (reflen>0) ? covered/reflen*100 : 0}'
                            done
                            if [[ ! -s "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.depth${DEPTH}.fa" ]] || ! grep -v "^>" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.depth${DEPTH}.fa" | grep -q "[ACGTacgtNn]"; then
                                printf "0.00\t0\t100.00\n"
                            else
                                N_COUNT=$(seqtk comp "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$REFSEQ.depth${DEPTH}.fa" | awk '{print $9}')
                                printf "%.2f\t" "$(( (REF_LEN - N_COUNT) * 100 / REF_LEN ))"
                                printf "%d\t" "$N_COUNT"
                                printf "%.2f\n" "$(( N_COUNT * 100 / REF_LEN ))"
                            fi
                        } >> "$ASSEMBLY_DIR/.summary"
                    done < <(awk -v pident="$PIDENT" -F"\t" '$3 >= pident {print $2}' "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.blastn.txt" | sort -u)
                done < "$SAMPLE_SHEET"
                "$ENV_MANAGER" deactivate
            fi
        fi
        sed '/^[[:space:]]*$/d' "$ASSEMBLY_DIR/.summary" > "$ASSEMBLY_DIR/$LIBRARY_NAME.summary.$(uname -n).$(date +'%Y-%m-%d').txt"
        rm -rf "$ASSEMBLY_DIR/.samplesheet" "$ASSEMBLY_DIR/.summary" "$ASSEMBLY_DIR"/*.fastq.gz
        end=$(date +%s.%N)
        runtime=$(python3 -c "print(${end} - ${start})")
        echo "" && echo "Done. The runtime was $runtime seconds." && echo ""
    }

    bg &>>"$ASSEMBLY_DIR/$LIBRARY_NAME.log.$(uname -n).$(date +'%Y-%m-%d').txt" &
    exit 0
}

ont() {
    NPROC=$(nproc)

    usage_ont() {
        echo "
vigeas [VIral GEnome ASsembly pipelines for WGS]
Written by Laise de Moraes <laise.moraes@fiocruz.br>

Usage: vigeas ont -x <preset> [options]

Preset:  -x STR   Always applied before other options []
                  - lsk - For libraries using ONT Ligation Sequencing Kit [*.bam data]

Options: -c STR   Clair3 model
         -i STR   Path containing the demultiplexed *.bam data
         -m INT   Min. read length (bp) for chimera filtering [default: expected amplicon size]
         -M INT   Max. read length (bp) for chimera filtering [default: expected amplicon size + 200]
         -s STR   Path containing the samplesheet [basic format: sample_id,barcode,primer_scheme]
         -t INT   Max number of threads [default: $((NPROC - 2))]
"
        exit 1
    }

    if [ $# -lt 1 ]; then
        usage_ont
    fi

    while getopts "c:i:m:M:s:t:x:" OPT; do
        case "$OPT" in
            c) CLAIR3_MODEL="$OPTARG";;
            i) INPUT="$OPTARG";;
            m) MIN="$OPTARG";;
            M) MAX="$OPTARG";;
            s) SAMPLE_SHEET="$OPTARG";;
            t) THREADS="$OPTARG";;
            x) PRESET="$OPTARG";;
            *) usage_ont;;
        esac
    done

    if [[ "${PRESET,,}" == "lsk" ]]; then
        if [[ -z "$PRESET" ]] || [[ -z "$CLAIR3_MODEL" ]] || [[ -z "$INPUT" ]] || [[ -z "$SAMPLE_SHEET" ]]; then
            usage_ont
        else
            LIBRARY_NAME="$(basename "$SAMPLE_SHEET" | awk -F. '{print $1}')"
            ASSEMBLY_DIR="$HOME/vigeas/${LIBRARY_NAME}_ASSEMBLY"
            [[ ! -d "$ASSEMBLY_DIR" ]] && mkdir -p "$ASSEMBLY_DIR" && chmod 700 -R "$ASSEMBLY_DIR"
            echo "" && echo "Output path: $ASSEMBLY_DIR"
            echo "" && echo "Log Analysis: $ASSEMBLY_DIR/$LIBRARY_NAME.log.$(uname -n).$(date +'%Y-%m-%d').txt"
            echo "" && echo "To display the log output in fulscreen: watch tail -n 20 $ASSEMBLY_DIR/$LIBRARY_NAME.log.$(uname -n).$(date +'%Y-%m-%d').txt"
        fi
    else
        usage_ont
    fi

    bg() {
        start=$(date +%s.%N)
        if [[ -z "$THREADS" ]]; then
            if ((NPROC > 2)); then
                THREADS=$((NPROC - 2))
            else
                THREADS=2
            fi
        fi
        if [[ -z "$DEPTH" ]]; then
            DEPTH=20
        fi
        if [[ "${PRESET,,}" == "lsk" ]]; then
            if [[ -z "$PRESET" ]] || [[ -z "$CLAIR3_MODEL" ]] || [[ -z "$INPUT" ]] || [[ -z "$SAMPLE_SHEET" ]]; then
                usage_ont
            else
                "$ENV_MANAGER" list -n vigeas-ont 'bbmap|bcftools|clair3|ivar|minimap2|muscle|samtools|seqkit|seqtk' && echo ""
                 echo "" && "$ENV_MANAGER" list -n vigeas-stats 'exonerate|ghostscript|r-base|r-cowplot|r-dplyr|r-ggplot2|r-patchwork|r-plyr|r-readr|r-svglite|samtools|seqkit|seqtk'
                "$ENV_MANAGER" activate vigeas-ont && echo ""
                while IFS= read -r -d '' BAM; do
                    samtools fastq "$BAM" > "$ASSEMBLY_DIR/$(echo "$BAM" | awk -F/ '{print $NF}' | awk -F. '{print $1}').fastq"
                done < <(find "$INPUT" -type f -name '*.bam' -print0)
                "$ENV_MANAGER" deactivate
            fi
        fi
        dos2unix "$SAMPLE_SHEET"
        while IFS= read -r DESCRIPTION || [ -n "$DESCRIPTION" ]; do
            "$ENV_MANAGER" activate vigeas-ont
            SAMPLE_ID=$(echo "$DESCRIPTION" | awk -F, '{print $1}')
            BARCODE_ID=$(echo "$DESCRIPTION"| awk -F, '{print $2}')
            cd "$ASSEMBLY_DIR" || exit
            mkdir "$ASSEMBLY_DIR"/"$SAMPLE_ID"
            if [[ "$BARCODE_ID" == *-* ]]; then
                for barcode in $(echo "$BARCODE_ID" | sed 's/BC/barcode/g' | tr '-' '\n'); do
                    cat "$ASSEMBLY_DIR"/*_$barcode.fastq >> "$ASSEMBLY_DIR/$SAMPLE_ID/$BARCODE_ID.fastq"
                done
            else
                for barcode in $(echo "$BARCODE_ID" | sed 's/BC/barcode/g' | tr '-' '\n'); do
                    cat "$ASSEMBLY_DIR"/*_$barcode.fastq >> "$ASSEMBLY_DIR/$SAMPLE_ID/$BARCODE_ID.fastq"
                done
            fi
            if echo "$DESCRIPTION" | grep -Eq "RSV_V[1-9]"; then
                PRIMER_SCHEME_VER=$(grep -o "RSV_V[1-9]" < "$SAMPLE_SHEET" | sort -u | awk -F'_V' '{print $2}')
                for version in $PRIMER_SCHEME_VER; do
                    PRIMER_SCHEME_VER="$version"
                    for type in RSVA RSVB; do
                        "$ENV_MANAGER" activate vigeas-ont
                        echo "" && echo "$PRIMER_SCHEME_DIR"
                        PRIMER_SCHEME="$type"
                        PRIMER_SCHEME_DIR=$(echo "${PRIMER_SCHEME}_V${PRIMER_SCHEME_VER}" | sed -e 's/RSVA_V1/RSVA\/V1/g' -e 's/RSVA_V2/RSVA\/V2/g' -e 's/RSVA_V3/RSVA\/V3/g' -e 's/RSVB_V1/RSVB\/V1/g' -e 's/RSVB_V2/RSVB\/V2/g' -e 's/RSVB_V3/RSVB\/V3/g')
                        if [[ -z "$MIN" ]]; then
                            MIN=$(paste <(grep -E "\-" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" | grep -v alt | awk -F"\t" '{print $2}') <(grep -E "\+" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" | grep -v alt | awk -F"\t" '{print $3}') | awk -F"\t" '{print $1-$2}' | sort -n | sed -n '1p')
                        fi
                        if [[ -z "$MAX" ]]; then
                            MAX=$(paste <(grep -E "\-" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" | grep -v alt | awk -F"\t" '{print $2}') <(grep -E "\+" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" | grep -v alt | awk -F"\t" '{print $3}') | awk -F"\t" '{print $1-$2+200}' | sort -n | sed -n '1p')
                        fi
                        [[ ! -f "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta.fai" ]] && samtools faidx "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta"
                        bbduk.sh minlen="$MIN" maxlen="$MAX" minavgquality=10 in="$ASSEMBLY_DIR/$SAMPLE_ID/$BARCODE_ID.fastq" out="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.filt.fastq"
                        dedupe.sh in="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.filt.fastq" out="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.filtDedup.fastq"
                        bbsplit.sh build=1 in="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.filtDedup.fastq" ref_a="$HOME/vigeas/primer_schemes/RSVA/V${PRIMER_SCHEME_VER}/RSVA.reference.fasta" out_a="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.RSVA.filtDedup.fastq" ref_b="$HOME/vigeas/primer_schemes/RSVB/V${PRIMER_SCHEME_VER}/RSVB.reference.fasta" out_b="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.RSVB.filtDedup.fastq"
                        minimap2 -t "$THREADS" -ax map-ont "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.filtDedup.fastq" | ivar trim -e -m 32 -q 8 -b "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.bam"
                        samtools sort -o "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.bam"
                        samtools index "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam"
                        run_clair3.sh -t "$THREADS" -p ont --chunk_size=10000 --enable_long_indel --haploid_precise --include_all_ctgs --no_phasing_for_fa --min_coverage="$DEPTH" -m "$HOME/rerio/clair3_models/$CLAIR3_MODEL" --sample_name="$SAMPLE_ID" --bam_fn="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" --ref_fn="$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" --bed_fn="$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" -o "$ASSEMBLY_DIR/$SAMPLE_ID/vcall_$PRIMER_SCHEME"
                        bgzip -dc "$ASSEMBLY_DIR/$SAMPLE_ID/vcall_$PRIMER_SCHEME/merge_output.vcf.gz" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.vcf"
                        bcftools view -i 'QUAL<10 || DP<=1' "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.vcf" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.fail.vcf"
                        bcftools view -i 'QUAL>=10 && DP>=20' "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.vcf" | awk 'BEGIN {OFS="\t"} /^#/ {print; next} {ref_len=length($4); alt_len=length($5); diff=alt_len-ref_len; if (diff == 0 || diff % 3 == 0) print;}' > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.pass.vcf"
                        bgzip -f "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.pass.vcf"
                        tabix -p vcf "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.pass.vcf.gz"
                        bcftools query -f '%CHROM\t%POS\n' "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.fail.vcf" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.nmask.txt"
                        samtools depth -a "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" | awk -v depth="$DEPTH" '$3 < depth {print $1 "\t" $2}' >> "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.nmask.txt" && sort -k2,2n "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.nmask.txt" -o "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.nmask.txt"
                        bcftools consensus -f "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.pass.vcf.gz" -m "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.nmask.txt" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}.fa"
                        sed -i -e "s/>.*/>${SAMPLE_ID}/g" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}.fa"
                        muscle -align <(awk 'NR==FNR{print; next} {print $1}' "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}.fa" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta") -output "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}.aligned.fa"
                        seqkit grep -ip "$SAMPLE_ID" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.aligned.fa" >> "$ASSEMBLY_DIR/$LIBRARY_NAME.consensus.$PRIMER_SCHEME.$(uname -n).$(date +'%Y-%m-%d').fasta"
                        "$ENV_MANAGER" deactivate
                        "$ENV_MANAGER" activate vigeas-stats
                        samtools depth -a "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth.tsv"
                        [[ ! -f "$ASSEMBLY_DIR/.summary" ]] && {
                            echo -e "primer_scheme\tsample_id\tnum_total_reads\tnum_mapp_reads\tavg_depth\tdepth_20x\tdepth_100x\tdepth_1000x\tref_cov\tncount\tncount_perc" > "$ASSEMBLY_DIR/.summary"
                        }
                        {
                            printf "\n"
                            printf "%s\t" "${PRIMER_SCHEME}_${PRIMER_SCHEME_VER}"
                            printf "%s\t" "${SAMPLE_ID}"
                            seqkit stats "$ASSEMBLY_DIR/$SAMPLE_ID/$BARCODE_ID.fastq" | awk 'NR==2{gsub(/,/, "", $4); printf "%s\t", $4}'
                            samtools view -F 4 -c "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" | awk '{printf "%s\t", $1}'
                            AVG_DEPTH=$(samtools depth "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" | awk '{sum+=$3} END {print (NR>0) ? sum/NR : 0}')
                            printf "%.2f\t" "$AVG_DEPTH"
                            REF_LEN=$(fastalength "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" | awk '{print $1}')
                            for depth in 20 100 1000; do
                                samtools depth "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.trimmed.sorted.bam" | awk -v cutoff="$depth" -v reflen="$REF_LEN" '$3 > cutoff {covered++} END {printf "%.2f\t", (reflen>0) ? covered/reflen*100 : 0}'
                            done
                            if [[ ! -s "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}.fa" ]]; then
                                printf "0.00\t0\t100.00\n"
                            else
                                N_COUNT=$(seqtk comp "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth${DEPTH}.fa" | awk '{print $9}')
                                printf "%.2f\t" "$(( (REF_LEN - N_COUNT) * 100 / REF_LEN ))"
                                printf "%d\t" "$N_COUNT"
                                printf "%.2f\n" "$(( N_COUNT * 100 / REF_LEN ))"
                            fi
                        } >> "$ASSEMBLY_DIR/.summary"
                        Rscript "$HOME/vigeas/scripts/depthCoverage.R" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME.depth.tsv" "$SAMPLE_ID" "$PRIMER_SCHEME_DIR" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.$PRIMER_SCHEME"
                        "$ENV_MANAGER" deactivate
                    done
                done
            else
                "$ENV_MANAGER" activate vigeas-ont
                if echo "$DESCRIPTION" | grep -Eq "DENGUESEQPAN_V[1-9]"; then
                    seqkit range "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.filtDedup.fastq" -r 1:1000 | seqkit fq2fa | blastn -num_threads "$THREADS" -db "$HOME/vigeas/blastdb/DENGUESEQPAN" -out "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.blastn.txt" -outfmt "6 qseqid sseqid pident length"
                    PRIMER_SCHEME=$(cut -f 2 "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.blastn.txt" | sort | uniq -c | sort -nr | head -n 1 | awk '{print $2}')
                    PRIMER_SCHEME_VER=$(grep -o "DENGUESEQPAN_V[1-9]" < "$SAMPLE_SHEET" | sort -u | awk -F'_V' '{print $2}')
                    PRIMER_SCHEME_DIR=$(echo "{$PRIMER_SCHEME}_V${PRIMER_SCHEME_VER}" | sed -e 's/DENGUESEQ1_V1/DENGUESEQ1\/V1/g' -e 's/DENGUESEQ2_V1/DENGUESEQ2\/V1/g' -e 's/DENGUESEQ3_V1/DENGUESEQ3\/V1/g' -e 's/DENGUESEQ4_V1/DENGUESEQ4\/V1/g')
                    [[ ! -f "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta.fai" ]] && samtools faidx "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta"
                else
                    PRIMER_SCHEME=$(echo "$DESCRIPTION" | awk -F, '{print $3}' | cut -d'_' -f1)
                    PRIMER_SCHEME_VER=$(echo "$DESCRIPTION" | awk -F, '{print $3}' | cut -d'_' -f2-)
                    PRIMER_SCHEME_DIR=$(echo "${PRIMER_SCHEME}_${PRIMER_SCHEME_VER}" | sed -e 's/ARTIC_V1/ARTIC\/V1/g' -e 's/ARTIC_V2/ARTIC\/V2/g' -e 's/ARTIC_V3/ARTIC\/V3/g' -e 's/ARTIC_V4/ARTIC\/V4/g' -e 's/ARTIC\/V4_1/ARTIC\/V4.1/g' -e 's/ARTIC_V5_3_2/ARTIC\/V5.3.2/g' -e 's/ChikAsianECSA_V1/ChikAsianECSA\/V1/g' -e 's/DENGUESEQ1_V1/DENGUESEQ1\/V1/g' -e 's/DENGUESEQ2_V1/DENGUESEQ2\/V1/g' -e 's/DENGUESEQ3_V1/DENGUESEQ3\/V1/g' -e 's/DENGUESEQ4_V1/DENGUESEQ4\/V1/g' -e 's/FIOCRUZ-IOC_V1/FIOCRUZ-IOC\/V1/g' -e 's/FIOCRUZ-IOC_V2/FIOCRUZ-IOC\/V2/g' -e 's/CCEMHTLV1_V1/CCEMHTLV1\/V1/g' -e 's/LassaL_V1/LassaL\/V1/g' -e 's/LassaS_V1/LassaS\/V1/g' -e 's/MIDNIGHT_V1/MIDNIGHT\/V1/g' -e 's/MIDNIGHT_V2/MIDNIGHT\/V2/g' -e 's/MPXV_V1/MPXV\/V1/g' -e 's/Nipah_V1/Nipah\/V1/g' -e 's/OROV400L_V1/OROV400L\/V1/g' -e 's/OROV400M_V1/OROV400M\/V1/g' -e 's/OROV400S_V1/OROV400S\/V1/g' -e 's/WNV400_V1/WNV400\/V1/g' -e 's/YFV500_V1/YFV500\/V1/g' -e 's/YFV1000_V1/YFV1000\/V1/g' -e 's/ZaireEbola_V1/ZaireEbola\/V1/g' -e 's/ZikaAsian_V1/ZikaAsian\/V1/g' -e 's/ZikaAsian_V2/ZikaAsian\/V2/g' -e 's/HTLV1DemincoF_V1/HTLV1DemincoF\/V1/g' -e 's/DENV1CADDE_V1/DENV1CADDE\/V1/g' -e 's/DENV2CADDE_V1/DENV2CADDE\/V1/g' -e 's/DENV3CADDE_V1/DENV3CADDE\/V1/g' -e 's/DENV4CADDE_V1/DENV4CADDE\/V1/g')
                    [[ ! -f "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta.fai" ]] && samtools faidx "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta"
                fi
                PRIMER_SCHEME=$(echo "$DESCRIPTION" | awk -F, '{print $3}' | awk -F_ '{print $1}')
                PRIMER_SCHEME_DIR=$(echo "$DESCRIPTION" | awk -F, '{print $3}' | sed -e 's/ARTIC_V1/ARTIC\/V1/g' -e 's/ARTIC_V2/ARTIC\/V2/g' -e 's/ARTIC_V3/ARTIC\/V3/g' -e 's/ARTIC_V4/ARTIC\/V4/g' -e 's/ARTIC\/V4_1/ARTIC\/V4.1/g' -e 's/ARTIC_V5_3_2/ARTIC\/V5.3.2/g' -e 's/ChikAsianECSA_V1/ChikAsianECSA\/V1/g' -e 's/DENGUESEQ1_V1/DENGUESEQ1\/V1/g' -e 's/DENGUESEQ2_V1/DENGUESEQ2\/V1/g' -e 's/DENGUESEQ3_V1/DENGUESEQ3\/V1/g' -e 's/DENGUESEQ4_V1/DENGUESEQ4\/V1/g' -e 's/FIOCRUZ-IOC_V1/FIOCRUZ-IOC\/V1/g' -e 's/FIOCRUZ-IOC_V2/FIOCRUZ-IOC\/V2/g' -e 's/CCEMHTLV1_V1/CCEMHTLV1\/V1/g' -e 's/LassaL_V1/LassaL\/V1/g' -e 's/LassaS_V1/LassaS\/V1/g' -e 's/MIDNIGHT_V1/MIDNIGHT\/V1/g' -e 's/MIDNIGHT_V2/MIDNIGHT\/V2/g' -e 's/MPXV_V1/MPXV\/V1/g' -e 's/Nipah_V1/Nipah\/V1/g' -e 's/OROV400L_V1/OROV400L\/V1/g' -e 's/OROV400M_V1/OROV400M\/V1/g' -e 's/OROV400S_V1/OROV400S\/V1/g' -e 's/WNV400_V1/WNV400\/V1/g' -e 's/YFV500_V1/YFV500\/V1/g' -e 's/YFV1000_V1/YFV1000\/V1/g' -e 's/ZaireEbola_V1/ZaireEbola\/V1/g' -e 's/ZikaAsian_V1/ZikaAsian\/V1/g' -e 's/ZikaAsian_V2/ZikaAsian\/V2/g' -e 's/HTLV1DemincoF_V1/HTLV1DemincoF\/V1/g' -e 's/DENV1CADDE_V1/DENV1CADDE\/V1/g' -e 's/DENV2CADDE_V1/DENV2CADDE\/V1/g' -e 's/DENV3CADDE_V1/DENV3CADDE\/V1/g' -e 's/DENV4CADDE_V1/DENV4CADDE\/V1/g')
                echo "" && echo "$PRIMER_SCHEME_DIR"
                if [[ -z "$MIN" ]]; then
                    MIN=$(paste <(grep -E "\-" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" | grep -v alt | awk -F"\t" '{print $2}') <(grep -E "\+" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" | grep -v alt | awk -F"\t" '{print $3}') | awk -F"\t" '{print $1-$2}' | sort -n | sed -n '1p')
                fi
                if [[ -z "$MAX" ]]; then
                    MAX=$(paste <(grep -E "\-" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" | grep -v alt | awk -F"\t" '{print $2}') <(grep -E "\+" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" | grep -v alt | awk -F"\t" '{print $3}') | awk -F"\t" '{print $1-$2+200}' | sort -n | sed -n '1p')
                fi
                [[ ! -f "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta.fai" ]] && samtools faidx "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta"
                bbduk.sh minlen="$MIN" maxlen="$MAX" minavgquality=10 in="$ASSEMBLY_DIR/$SAMPLE_ID/$BARCODE_ID.fastq" out="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.filt.fastq"
                dedupe.sh in="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.filt.fastq" out="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.filtDedup.fastq"
                minimap2 -t "$THREADS" -ax map-ont "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.filtDedup.fastq" | ivar trim -e -m 32 -q 8 -b "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.bam"
                samtools sort -o "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.bam"
                samtools index "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam"
                run_clair3.sh -t "$THREADS" -p ont --chunk_size=10000 --enable_long_indel --haploid_precise --include_all_ctgs --no_phasing_for_fa --min_coverage="$DEPTH" -m "$HOME/rerio/clair3_models/$CLAIR3_MODEL" --sample_name="$SAMPLE_ID" --bam_fn="$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" --ref_fn="$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" --bed_fn="$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.scheme.bed" -o "$ASSEMBLY_DIR/$SAMPLE_ID/vcall"
                bgzip -dc "$ASSEMBLY_DIR/$SAMPLE_ID/vcall/merge_output.vcf.gz" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.vcf"
                bcftools view -i 'QUAL<10 || DP<=1' "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.vcf" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.fail.vcf"
                bcftools view -i 'QUAL>=10 && DP>=20' "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.vcf" | awk 'BEGIN {OFS="\t"} /^#/ {print; next} {ref_len=length($4); alt_len=length($5); diff=alt_len-ref_len; if (diff == 0 || diff % 3 == 0) print;}' > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.pass.vcf"
                bgzip -f "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.pass.vcf"
                tabix -p vcf "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.pass.vcf.gz"
                bcftools query -f '%CHROM\t%POS\n' "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.fail.vcf" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.nmask.txt"
                samtools depth -a "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" | awk -v depth="$DEPTH" '$3 < depth {print $1 "\t" $2}' >> "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.nmask.txt" && sort -k2,2n "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.nmask.txt" -o "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.nmask.txt"
                bcftools consensus -f "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.pass.vcf.gz" -m "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.nmask.txt" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.fa"
                sed -i -e "s/>.*/>${SAMPLE_ID}/g" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.fa"
                muscle -align <(awk 'NR==FNR{print; next} {print $1}' "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.fa" "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta") -output "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.aligned.fa"
                seqkit grep -ip "$SAMPLE_ID" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.aligned.fa" >> "$ASSEMBLY_DIR/$LIBRARY_NAME.consensus.$PRIMER_SCHEME.$(uname -n).$(date +'%Y-%m-%d').fasta"
                "$ENV_MANAGER" deactivate
                "$ENV_MANAGER" activate vigeas-stats
                samtools depth -a "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" > "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth.tsv"
                [[ ! -f "$ASSEMBLY_DIR/.summary" ]] && {
                    echo -e "primer_scheme\tsample_id\tnum_total_reads\tnum_mapp_reads\tavg_depth\tdepth_20x\tdepth_100x\tdepth_1000x\tref_cov\tncount\tncount_perc" > "$ASSEMBLY_DIR/.summary"
                }
                {
                    printf "\n"
                    printf "%s\t" "${PRIMER_SCHEME}_${PRIMER_SCHEME_VER}"
                    printf "%s\t" "${SAMPLE_ID}"
                    seqkit stats "$ASSEMBLY_DIR/$SAMPLE_ID/$BARCODE_ID.fastq" | awk 'NR==2{gsub(/,/, "", $4); printf "%s\t", $4}'
                    samtools view -F 4 -c "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" | awk '{printf "%s\t", $1}'
                    AVG_DEPTH=$(samtools depth "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" | awk '{sum+=$3} END {print (NR>0) ? sum/NR : 0}')
                    printf "%.2f\t" "$AVG_DEPTH"
                    REF_LEN=$(fastalength "$HOME/vigeas/primer_schemes/$PRIMER_SCHEME_DIR/$PRIMER_SCHEME.reference.fasta" | awk '{print $1}')
                    for depth in 20 100 1000; do
                        samtools depth "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.trimmed.sorted.bam" | awk -v cutoff="$depth" -v reflen="$REF_LEN" '$3 > cutoff {covered++} END {printf "%.2f\t", (reflen>0) ? covered/reflen*100 : 0}'
                    done
                    if [[ ! -s "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.fa" ]]; then
                        printf "0.00\t0\t100.00\n"
                    else
                        N_COUNT=$(seqtk comp "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth${DEPTH}.fa" | awk '{print $9}')
                        printf "%.2f\t" "$(( (REF_LEN - N_COUNT) * 100 / REF_LEN ))"
                        printf "%d\t" "$N_COUNT"
                        printf "%.2f\n" "$(( N_COUNT * 100 / REF_LEN ))"
                    fi
                } >> "$ASSEMBLY_DIR/.summary"
                Rscript "$HOME/vigeas/scripts/depthCoverage.R" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID.depth.tsv" "$SAMPLE_ID" "$PRIMER_SCHEME_DIR" "$ASSEMBLY_DIR/$SAMPLE_ID/$SAMPLE_ID"
                "$ENV_MANAGER" deactivate
            fi
        done < "$SAMPLE_SHEET"
        "$ENV_MANAGER" activate vigeas-stats
        for target in $(find "$ASSEMBLY_DIR" -type f -name '*coverage.pdf' | awk -F. '{print $2}' | awk -F- '{print $1}' | sort -u); do
            gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$ASSEMBLY_DIR/$LIBRARY_NAME.$target-coverage.$(uname -n).$(date +'%Y-%m-%d').pdf" "$ASSEMBLY_DIR"/*/*.$target-coverage.pdf
        done
        "$ENV_MANAGER" deactivate
        sed '/^[[:space:]]*$/d' "$ASSEMBLY_DIR/.summary" > "$ASSEMBLY_DIR/$LIBRARY_NAME.summary.$(uname -n).$(date +'%Y-%m-%d').txt"
        rm -rf "$ASSEMBLY_DIR/.summary" "$ASSEMBLY_DIR/*.fastq"
        end=$(date +%s.%N)
        runtime=$(python3 -c "print(${end} - ${start})")
        echo "" && echo "Done. The runtime was $runtime seconds." && echo ""
    }

    bg &>>"$ASSEMBLY_DIR/$LIBRARY_NAME.log.$(uname -n).$(date +'%Y-%m-%d').txt" &
    exit 0
}

if [ $# -lt 1 ]; then
    usage
fi

case "$1" in
    clr3)     shift; clr3 "$@";;
    ill)      shift; ill "$@";;
    makedb)   shift; makedb "$@";;
    ont)      shift; ont "$@";;
    panels)   shift; enrichment_panels;;
    primers)  shift; primer_schemes;;
    update)   shift; update;;
    version)  shift; version;;
    *)        echo "Error: Unknown command '$1'";;
esac
